" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

let mapleader = " "

set ignorecase
set wrapscan                      " searches wrap around the end of the file
set gdefault                      " substitute all occurrences in line per default

vnoremap < <gv
vnoremap > >gv
vnoremap = =gv


set clipboard+=unnamed
set clipboard+=unnamedplus


" don't overwrite register when pasting over selection
vnoremap p pgvy


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=8

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

Plug 'preservim/nerdtree'

set easymotion
nmap s <Plug>(easymotion-s)

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

sethandler <c-h> a:vim
sethandler <c-j> a:vim
sethandler <c-k> a:vim
sethandler <c-l> a:vim
nnoremap <c-h> <c-W>h
nnoremap <c-j> <c-W>j
nnoremap <c-k> <c-W>k
nnoremap <c-l> <c-W>l
nnoremap <c-w>n :action EditSourceInNewWindow<CR>

nmap <leader>? :action GotoAction<CR>

nmap gr :action ShowUsages<CR>
nmap gi :action GotoImplementation<CR>
nmap gs :action GotoSuperMethod<CR>


" nmap <C-p> :action ParameterInfo<CR>
" imap <C-p> <C-o>:action ParameterInfo<CR>
nmap <leader>n :action GotoNextError<CR>
map gh <Action>(ShowErrorDescription)


nmap <leader>rr :action RenameElement<CR>
nmap <leader>rev :action IntroduceVariable<CR>
vmap <leader>rev :action IntroduceVariable<CR>
nmap <leader>rem :action ExtractMethod<CR>
vmap <leader>rem :action ExtractMethod<CR>
nmap <leader>rm :action Move<CR>
nmap <leader>ro :action OptimizeImports<CR>
nmap <leader>rG :action Generate<CR>

vnoremap <leader>f  :action ReformatCode<CR>
nnoremap <leader>f  :action ReformatCode<CR>
nnoremap <C-v> p
inoremap <C-v> <esc>pa
nnoremap <leader>e :NERDTree<CR>

nmap <C-p> <Action>(SearchEverywhere)


nmap <leader>rd <Action>(Debug)
nmap <leader>rs <Action>(Stop)
nmap <leader>rr <Action>(mainRunToolbarRunProcess)
nmap <leader>bb <Action>(ToggleLineBreakpoint)


" https://github.com/JetBrains/ideavim/discussions/375
" echo &ide
if &ide =~? "rider"
    nmap <leader>tr <Action>(RiderUnitTestRunContextAction)
    nmap <leader>td <Action>(RiderUnitTestDebugContextAction)
    nmap <leader>ta <Action>(RiderUnitTestRunSolutionAction)
    nmap <leader>ba <Action>(BuildWholeSolutionAction)
endif

if &ide =~? "idea"
    nmap <leader>ba <Action>(CompileDirty) " Build All
    nmap <leader>tr <Action>(RunClass) " This Run (run code/test under cursor)
    nmap <leader>td <Action>(DebugClass) " This Debug (debug code/test under cursor)
endif
